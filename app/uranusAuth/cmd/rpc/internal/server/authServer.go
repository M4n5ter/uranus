// Code generated by goctl. DO NOT EDIT!
// Source: uranusAuth.proto

package server

import (
	"context"

	"uranus/app/uranusAuth/cmd/rpc/internal/logic"
	"uranus/app/uranusAuth/cmd/rpc/internal/svc"
	"uranus/app/uranusAuth/cmd/rpc/pb"
)

type AuthServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedAuthServer
}

func NewAuthServer(svcCtx *svc.ServiceContext) *AuthServer {
	return &AuthServer{
		svcCtx: svcCtx,
	}
}

//  生成 Token 服务只对 usercenter 开放
func (s *AuthServer) GenerateToken(ctx context.Context, in *pb.GenerateTokenReq) (*pb.GenerateTokenResp, error) {
	l := logic.NewGenerateTokenLogic(ctx, s.svcCtx)
	return l.GenerateToken(in)
}

//  清除 Token 服务只对 usercenter 开放
func (s *AuthServer) ClearToken(ctx context.Context, in *pb.ClearTokenReq) (*pb.ClearTokenResp, error) {
	l := logic.NewClearTokenLogic(ctx, s.svcCtx)
	return l.ClearToken(in)
}

//  ValidateToken 只对 usercenter 和授权服务 api 开放
func (s *AuthServer) ValidateToken(ctx context.Context, in *pb.ValidateTokenReq) (*pb.ValidateTokenResp, error) {
	l := logic.NewValidateTokenLogic(ctx, s.svcCtx)
	return l.ValidateToken(in)
}
