// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: app/flightInquiry/cmd/rpc/pb/flightInquiry.proto

package pb

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 航班信息
type FlightInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 航班信息id
	FlightInfoID int64 `protobuf:"varint,16,opt,name=FlightInfoID,proto3" json:"FlightInfoID,omitempty"`
	// 航班号，例如MU5735
	FlightNumber string `protobuf:"bytes,1,opt,name=FlightNumber,proto3" json:"FlightNumber,omitempty"`
	// 出发日期
	SetOutDate *timestamp.Timestamp `protobuf:"bytes,2,opt,name=SetOutDate,proto3" json:"SetOutDate,omitempty"`
	// 是否为头等舱/商务舱
	IsFirstClass bool `protobuf:"varint,3,opt,name=IsFirstClass,proto3" json:"IsFirstClass,omitempty"`
	// 舱位ID
	SpaceID int64 `protobuf:"varint,4,opt,name=SpaceID,proto3" json:"SpaceID,omitempty"`
	// 票价(￥)
	Price uint64 `protobuf:"varint,5,opt,name=Price,proto3" json:"Price,omitempty"`
	// 折扣(-n%)
	Discount int64 `protobuf:"varint,6,opt,name=Discount,proto3" json:"Discount,omitempty"`
	// 剩余量(由于有超卖可能性，可能为负)
	Surplus int64 `protobuf:"varint,7,opt,name=Surplus,proto3" json:"Surplus,omitempty"`
	// 准点率(例如97，表示97%)
	Punctuality uint32 `protobuf:"varint,8,opt,name=Punctuality,proto3" json:"Punctuality,omitempty"`
	// 起飞地点
	DepartPosition string `protobuf:"bytes,9,opt,name=DepartPosition,proto3" json:"DepartPosition,omitempty"`
	// 起飞时间
	DepartTime *timestamp.Timestamp `protobuf:"bytes,10,opt,name=DepartTime,proto3" json:"DepartTime,omitempty"`
	// 降落地点
	ArrivePosition string `protobuf:"bytes,11,opt,name=ArrivePosition,proto3" json:"ArrivePosition,omitempty"`
	// 降落时间
	ArriveTime *timestamp.Timestamp `protobuf:"bytes,12,opt,name=ArriveTime,proto3" json:"ArriveTime,omitempty"`
	// 退票信息
	RefundInfo *RefundInfo `protobuf:"bytes,13,opt,name=RefundInfo,proto3" json:"RefundInfo,omitempty"`
	// 改票信息
	ChangeInfo *ChangeInfo `protobuf:"bytes,14,opt,name=ChangeInfo,proto3" json:"ChangeInfo,omitempty"`
	// 托运行李额(KG)
	Cba int64 `protobuf:"varint,15,opt,name=Cba,proto3" json:"Cba,omitempty"`
	// 机型
	FlightType string `protobuf:"bytes,17,opt,name=FlightType,proto3" json:"FlightType,omitempty"`
}

func (x *FlightInfo) Reset() {
	*x = FlightInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlightInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlightInfo) ProtoMessage() {}

func (x *FlightInfo) ProtoReflect() protoreflect.Message {
	mi := &file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlightInfo.ProtoReflect.Descriptor instead.
func (*FlightInfo) Descriptor() ([]byte, []int) {
	return file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_rawDescGZIP(), []int{0}
}

func (x *FlightInfo) GetFlightInfoID() int64 {
	if x != nil {
		return x.FlightInfoID
	}
	return 0
}

func (x *FlightInfo) GetFlightNumber() string {
	if x != nil {
		return x.FlightNumber
	}
	return ""
}

func (x *FlightInfo) GetSetOutDate() *timestamp.Timestamp {
	if x != nil {
		return x.SetOutDate
	}
	return nil
}

func (x *FlightInfo) GetIsFirstClass() bool {
	if x != nil {
		return x.IsFirstClass
	}
	return false
}

func (x *FlightInfo) GetSpaceID() int64 {
	if x != nil {
		return x.SpaceID
	}
	return 0
}

func (x *FlightInfo) GetPrice() uint64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *FlightInfo) GetDiscount() int64 {
	if x != nil {
		return x.Discount
	}
	return 0
}

func (x *FlightInfo) GetSurplus() int64 {
	if x != nil {
		return x.Surplus
	}
	return 0
}

func (x *FlightInfo) GetPunctuality() uint32 {
	if x != nil {
		return x.Punctuality
	}
	return 0
}

func (x *FlightInfo) GetDepartPosition() string {
	if x != nil {
		return x.DepartPosition
	}
	return ""
}

func (x *FlightInfo) GetDepartTime() *timestamp.Timestamp {
	if x != nil {
		return x.DepartTime
	}
	return nil
}

func (x *FlightInfo) GetArrivePosition() string {
	if x != nil {
		return x.ArrivePosition
	}
	return ""
}

func (x *FlightInfo) GetArriveTime() *timestamp.Timestamp {
	if x != nil {
		return x.ArriveTime
	}
	return nil
}

func (x *FlightInfo) GetRefundInfo() *RefundInfo {
	if x != nil {
		return x.RefundInfo
	}
	return nil
}

func (x *FlightInfo) GetChangeInfo() *ChangeInfo {
	if x != nil {
		return x.ChangeInfo
	}
	return nil
}

func (x *FlightInfo) GetCba() int64 {
	if x != nil {
		return x.Cba
	}
	return 0
}

func (x *FlightInfo) GetFlightType() string {
	if x != nil {
		return x.FlightType
	}
	return ""
}

type UniqFlightWithSpaces struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 航班信息id
	FlightInfoID int64 `protobuf:"varint,1,opt,name=FlightInfoID,proto3" json:"FlightInfoID,omitempty"`
	// 同一条航班信息的不同仓位
	SpacesOfFlightInfo []*FlightInfo `protobuf:"bytes,2,rep,name=SpacesOfFlightInfo,proto3" json:"SpacesOfFlightInfo,omitempty"`
}

func (x *UniqFlightWithSpaces) Reset() {
	*x = UniqFlightWithSpaces{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UniqFlightWithSpaces) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UniqFlightWithSpaces) ProtoMessage() {}

func (x *UniqFlightWithSpaces) ProtoReflect() protoreflect.Message {
	mi := &file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UniqFlightWithSpaces.ProtoReflect.Descriptor instead.
func (*UniqFlightWithSpaces) Descriptor() ([]byte, []int) {
	return file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_rawDescGZIP(), []int{1}
}

func (x *UniqFlightWithSpaces) GetFlightInfoID() int64 {
	if x != nil {
		return x.FlightInfoID
	}
	return 0
}

func (x *UniqFlightWithSpaces) GetSpacesOfFlightInfo() []*FlightInfo {
	if x != nil {
		return x.SpacesOfFlightInfo
	}
	return nil
}

// 时间-费用
type TimeFee struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time *timestamp.Timestamp `protobuf:"bytes,1,opt,name=Time,proto3" json:"Time,omitempty"`
	Fee  uint64               `protobuf:"varint,2,opt,name=Fee,proto3" json:"Fee,omitempty"`
}

func (x *TimeFee) Reset() {
	*x = TimeFee{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeFee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeFee) ProtoMessage() {}

func (x *TimeFee) ProtoReflect() protoreflect.Message {
	mi := &file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeFee.ProtoReflect.Descriptor instead.
func (*TimeFee) Descriptor() ([]byte, []int) {
	return file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_rawDescGZIP(), []int{2}
}

func (x *TimeFee) GetTime() *timestamp.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *TimeFee) GetFee() uint64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

// 退票信息
type RefundInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeFees []*TimeFee `protobuf:"bytes,1,rep,name=TimeFees,proto3" json:"TimeFees,omitempty"`
}

func (x *RefundInfo) Reset() {
	*x = RefundInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefundInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundInfo) ProtoMessage() {}

func (x *RefundInfo) ProtoReflect() protoreflect.Message {
	mi := &file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundInfo.ProtoReflect.Descriptor instead.
func (*RefundInfo) Descriptor() ([]byte, []int) {
	return file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_rawDescGZIP(), []int{3}
}

func (x *RefundInfo) GetTimeFees() []*TimeFee {
	if x != nil {
		return x.TimeFees
	}
	return nil
}

// 改票信息
type ChangeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeFees []*TimeFee `protobuf:"bytes,1,rep,name=TimeFees,proto3" json:"TimeFees,omitempty"`
}

func (x *ChangeInfo) Reset() {
	*x = ChangeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeInfo) ProtoMessage() {}

func (x *ChangeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeInfo.ProtoReflect.Descriptor instead.
func (*ChangeInfo) Descriptor() ([]byte, []int) {
	return file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_rawDescGZIP(), []int{4}
}

func (x *ChangeInfo) GetTimeFees() []*TimeFee {
	if x != nil {
		return x.TimeFees
	}
	return nil
}

// QuireBySetOutDateAndFlightNumberReq 通过给定日期、航班号进行航班查询请求
type QuireBySetOutDateAndFlightNumberReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 航班号，例如MU5735
	FlightNumber string `protobuf:"bytes,1,opt,name=FlightNumber,proto3" json:"FlightNumber,omitempty"`
	// 出发日期
	SetOutDate *timestamp.Timestamp `protobuf:"bytes,2,opt,name=SetOutDate,proto3" json:"SetOutDate,omitempty"`
}

func (x *QuireBySetOutDateAndFlightNumberReq) Reset() {
	*x = QuireBySetOutDateAndFlightNumberReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuireBySetOutDateAndFlightNumberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuireBySetOutDateAndFlightNumberReq) ProtoMessage() {}

func (x *QuireBySetOutDateAndFlightNumberReq) ProtoReflect() protoreflect.Message {
	mi := &file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuireBySetOutDateAndFlightNumberReq.ProtoReflect.Descriptor instead.
func (*QuireBySetOutDateAndFlightNumberReq) Descriptor() ([]byte, []int) {
	return file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_rawDescGZIP(), []int{5}
}

func (x *QuireBySetOutDateAndFlightNumberReq) GetFlightNumber() string {
	if x != nil {
		return x.FlightNumber
	}
	return ""
}

func (x *QuireBySetOutDateAndFlightNumberReq) GetSetOutDate() *timestamp.Timestamp {
	if x != nil {
		return x.SetOutDate
	}
	return nil
}

// QuireBySetOutDateAndFlightNumberResp 为 QuireBySetOutDateAndFlightNumberReq 的响应
type QuireBySetOutDateAndFlightNumberResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 查询结果
	FlightInfos []*FlightInfo `protobuf:"bytes,1,rep,name=FlightInfos,proto3" json:"FlightInfos,omitempty"`
}

func (x *QuireBySetOutDateAndFlightNumberResp) Reset() {
	*x = QuireBySetOutDateAndFlightNumberResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuireBySetOutDateAndFlightNumberResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuireBySetOutDateAndFlightNumberResp) ProtoMessage() {}

func (x *QuireBySetOutDateAndFlightNumberResp) ProtoReflect() protoreflect.Message {
	mi := &file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuireBySetOutDateAndFlightNumberResp.ProtoReflect.Descriptor instead.
func (*QuireBySetOutDateAndFlightNumberResp) Descriptor() ([]byte, []int) {
	return file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_rawDescGZIP(), []int{6}
}

func (x *QuireBySetOutDateAndFlightNumberResp) GetFlightInfos() []*FlightInfo {
	if x != nil {
		return x.FlightInfos
	}
	return nil
}

// QuireBySetOutDateStartPositionEndPositionReq 通过给定日期、出发地、目的地进行航班查询请求
type QuireBySetOutDateStartPositionEndPositionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 出发日期
	SetOutDate *timestamp.Timestamp `protobuf:"bytes,1,opt,name=SetOutDate,proto3" json:"SetOutDate,omitempty"`
	// 起飞地点
	DepartPosition string `protobuf:"bytes,2,opt,name=DepartPosition,proto3" json:"DepartPosition,omitempty"`
	// 降落地点
	ArrivePosition string `protobuf:"bytes,3,opt,name=ArrivePosition,proto3" json:"ArrivePosition,omitempty"`
}

func (x *QuireBySetOutDateStartPositionEndPositionReq) Reset() {
	*x = QuireBySetOutDateStartPositionEndPositionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuireBySetOutDateStartPositionEndPositionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuireBySetOutDateStartPositionEndPositionReq) ProtoMessage() {}

func (x *QuireBySetOutDateStartPositionEndPositionReq) ProtoReflect() protoreflect.Message {
	mi := &file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuireBySetOutDateStartPositionEndPositionReq.ProtoReflect.Descriptor instead.
func (*QuireBySetOutDateStartPositionEndPositionReq) Descriptor() ([]byte, []int) {
	return file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_rawDescGZIP(), []int{7}
}

func (x *QuireBySetOutDateStartPositionEndPositionReq) GetSetOutDate() *timestamp.Timestamp {
	if x != nil {
		return x.SetOutDate
	}
	return nil
}

func (x *QuireBySetOutDateStartPositionEndPositionReq) GetDepartPosition() string {
	if x != nil {
		return x.DepartPosition
	}
	return ""
}

func (x *QuireBySetOutDateStartPositionEndPositionReq) GetArrivePosition() string {
	if x != nil {
		return x.ArrivePosition
	}
	return ""
}

// QuireBySetOutDateStartPositionEndPositionResp 为 QuireBySetOutTimeStartPositionEndPositionReq 的响应
type QuireBySetOutDateStartPositionEndPositionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 查询结果
	FlightInfos []*FlightInfo `protobuf:"bytes,1,rep,name=FlightInfos,proto3" json:"FlightInfos,omitempty"`
}

func (x *QuireBySetOutDateStartPositionEndPositionResp) Reset() {
	*x = QuireBySetOutDateStartPositionEndPositionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuireBySetOutDateStartPositionEndPositionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuireBySetOutDateStartPositionEndPositionResp) ProtoMessage() {}

func (x *QuireBySetOutDateStartPositionEndPositionResp) ProtoReflect() protoreflect.Message {
	mi := &file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuireBySetOutDateStartPositionEndPositionResp.ProtoReflect.Descriptor instead.
func (*QuireBySetOutDateStartPositionEndPositionResp) Descriptor() ([]byte, []int) {
	return file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_rawDescGZIP(), []int{8}
}

func (x *QuireBySetOutDateStartPositionEndPositionResp) GetFlightInfos() []*FlightInfo {
	if x != nil {
		return x.FlightInfos
	}
	return nil
}

// FlightDetailReq 仅对其它 rpc 开放
type FlightDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 票id
	TicketID int64 `protobuf:"varint,1,opt,name=ticketID,proto3" json:"ticketID,omitempty"`
}

func (x *FlightDetailReq) Reset() {
	*x = FlightDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlightDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlightDetailReq) ProtoMessage() {}

func (x *FlightDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlightDetailReq.ProtoReflect.Descriptor instead.
func (*FlightDetailReq) Descriptor() ([]byte, []int) {
	return file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_rawDescGZIP(), []int{9}
}

func (x *FlightDetailReq) GetTicketID() int64 {
	if x != nil {
		return x.TicketID
	}
	return 0
}

// FlightDetailResp FlightDetailReq 响应
type FlightDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlightInfo *FlightInfo `protobuf:"bytes,3,opt,name=FlightInfo,proto3" json:"FlightInfo,omitempty"`
}

func (x *FlightDetailResp) Reset() {
	*x = FlightDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlightDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlightDetailResp) ProtoMessage() {}

func (x *FlightDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlightDetailResp.ProtoReflect.Descriptor instead.
func (*FlightDetailResp) Descriptor() ([]byte, []int) {
	return file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_rawDescGZIP(), []int{10}
}

func (x *FlightDetailResp) GetFlightInfo() *FlightInfo {
	if x != nil {
		return x.FlightInfo
	}
	return nil
}

// 查询折扣航班
type GetDiscountFlightsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 出发地(为空表示全部)
	DepartPosition string `protobuf:"bytes,1,opt,name=DepartPosition,proto3" json:"DepartPosition,omitempty"`
	// 目的地(为空表示全部)
	ArrivePosition string `protobuf:"bytes,2,opt,name=ArrivePosition,proto3" json:"ArrivePosition,omitempty"`
	// 天数(表示未来多少天内)
	Days int64 `protobuf:"varint,3,opt,name=Days,proto3" json:"Days,omitempty"`
	// 指定需要的航班条数(0 代表全要)
	Num int64 `protobuf:"varint,4,opt,name=Num,proto3" json:"Num,omitempty"`
}

func (x *GetDiscountFlightsReq) Reset() {
	*x = GetDiscountFlightsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDiscountFlightsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDiscountFlightsReq) ProtoMessage() {}

func (x *GetDiscountFlightsReq) ProtoReflect() protoreflect.Message {
	mi := &file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDiscountFlightsReq.ProtoReflect.Descriptor instead.
func (*GetDiscountFlightsReq) Descriptor() ([]byte, []int) {
	return file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_rawDescGZIP(), []int{11}
}

func (x *GetDiscountFlightsReq) GetDepartPosition() string {
	if x != nil {
		return x.DepartPosition
	}
	return ""
}

func (x *GetDiscountFlightsReq) GetArrivePosition() string {
	if x != nil {
		return x.ArrivePosition
	}
	return ""
}

func (x *GetDiscountFlightsReq) GetDays() int64 {
	if x != nil {
		return x.Days
	}
	return 0
}

func (x *GetDiscountFlightsReq) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

type GetDiscountFlightsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlightInfos []*FlightInfo `protobuf:"bytes,1,rep,name=FlightInfos,proto3" json:"FlightInfos,omitempty"`
}

func (x *GetDiscountFlightsResp) Reset() {
	*x = GetDiscountFlightsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDiscountFlightsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDiscountFlightsResp) ProtoMessage() {}

func (x *GetDiscountFlightsResp) ProtoReflect() protoreflect.Message {
	mi := &file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDiscountFlightsResp.ProtoReflect.Descriptor instead.
func (*GetDiscountFlightsResp) Descriptor() ([]byte, []int) {
	return file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_rawDescGZIP(), []int{12}
}

func (x *GetDiscountFlightsResp) GetFlightInfos() []*FlightInfo {
	if x != nil {
		return x.FlightInfos
	}
	return nil
}

// 查询指定价格区间的航班
type GetFlightsByPriceRangeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 出发地(为空表示全部)
	DepartPosition string `protobuf:"bytes,1,opt,name=DepartPosition,proto3" json:"DepartPosition,omitempty"`
	// 目的地(为空表示全部)
	ArrivePosition string `protobuf:"bytes,2,opt,name=ArrivePosition,proto3" json:"ArrivePosition,omitempty"`
	// 最低价格
	MinPrice int64 `protobuf:"varint,3,opt,name=MinPrice,proto3" json:"MinPrice,omitempty"`
	// 最高价格
	MaxPrice int64 `protobuf:"varint,4,opt,name=MaxPrice,proto3" json:"MaxPrice,omitempty"`
	// 天数(表示未来多少天内)
	Days int64 `protobuf:"varint,5,opt,name=Days,proto3" json:"Days,omitempty"`
	// 指定需要的航班条数(0 代表全要)
	Num int64 `protobuf:"varint,6,opt,name=Num,proto3" json:"Num,omitempty"`
}

func (x *GetFlightsByPriceRangeReq) Reset() {
	*x = GetFlightsByPriceRangeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFlightsByPriceRangeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFlightsByPriceRangeReq) ProtoMessage() {}

func (x *GetFlightsByPriceRangeReq) ProtoReflect() protoreflect.Message {
	mi := &file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFlightsByPriceRangeReq.ProtoReflect.Descriptor instead.
func (*GetFlightsByPriceRangeReq) Descriptor() ([]byte, []int) {
	return file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_rawDescGZIP(), []int{13}
}

func (x *GetFlightsByPriceRangeReq) GetDepartPosition() string {
	if x != nil {
		return x.DepartPosition
	}
	return ""
}

func (x *GetFlightsByPriceRangeReq) GetArrivePosition() string {
	if x != nil {
		return x.ArrivePosition
	}
	return ""
}

func (x *GetFlightsByPriceRangeReq) GetMinPrice() int64 {
	if x != nil {
		return x.MinPrice
	}
	return 0
}

func (x *GetFlightsByPriceRangeReq) GetMaxPrice() int64 {
	if x != nil {
		return x.MaxPrice
	}
	return 0
}

func (x *GetFlightsByPriceRangeReq) GetDays() int64 {
	if x != nil {
		return x.Days
	}
	return 0
}

func (x *GetFlightsByPriceRangeReq) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

type GetFlightsByPriceRangeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlightInfos []*FlightInfo `protobuf:"bytes,1,rep,name=FlightInfos,proto3" json:"FlightInfos,omitempty"`
}

func (x *GetFlightsByPriceRangeResp) Reset() {
	*x = GetFlightsByPriceRangeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFlightsByPriceRangeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFlightsByPriceRangeResp) ProtoMessage() {}

func (x *GetFlightsByPriceRangeResp) ProtoReflect() protoreflect.Message {
	mi := &file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFlightsByPriceRangeResp.ProtoReflect.Descriptor instead.
func (*GetFlightsByPriceRangeResp) Descriptor() ([]byte, []int) {
	return file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_rawDescGZIP(), []int{14}
}

func (x *GetFlightsByPriceRangeResp) GetFlightInfos() []*FlightInfo {
	if x != nil {
		return x.FlightInfos
	}
	return nil
}

// 根据航班号获取航班信息
type GetFlightsByFlightNumberReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 航班号
	FlightNumber string `protobuf:"bytes,1,opt,name=FlightNumber,proto3" json:"FlightNumber,omitempty"`
	// 天数
	Days int64 `protobuf:"varint,2,opt,name=Days,proto3" json:"Days,omitempty"`
	// 指定需要的航班条数
	Num int64 `protobuf:"varint,3,opt,name=Num,proto3" json:"Num,omitempty"`
}

func (x *GetFlightsByFlightNumberReq) Reset() {
	*x = GetFlightsByFlightNumberReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFlightsByFlightNumberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFlightsByFlightNumberReq) ProtoMessage() {}

func (x *GetFlightsByFlightNumberReq) ProtoReflect() protoreflect.Message {
	mi := &file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFlightsByFlightNumberReq.ProtoReflect.Descriptor instead.
func (*GetFlightsByFlightNumberReq) Descriptor() ([]byte, []int) {
	return file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_rawDescGZIP(), []int{15}
}

func (x *GetFlightsByFlightNumberReq) GetFlightNumber() string {
	if x != nil {
		return x.FlightNumber
	}
	return ""
}

func (x *GetFlightsByFlightNumberReq) GetDays() int64 {
	if x != nil {
		return x.Days
	}
	return 0
}

func (x *GetFlightsByFlightNumberReq) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

type GetFlightsByFlightNumberResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqFlightWithSpaces []*UniqFlightWithSpaces `protobuf:"bytes,1,rep,name=UniqFlightWithSpaces,proto3" json:"UniqFlightWithSpaces,omitempty"`
}

func (x *GetFlightsByFlightNumberResp) Reset() {
	*x = GetFlightsByFlightNumberResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFlightsByFlightNumberResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFlightsByFlightNumberResp) ProtoMessage() {}

func (x *GetFlightsByFlightNumberResp) ProtoReflect() protoreflect.Message {
	mi := &file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFlightsByFlightNumberResp.ProtoReflect.Descriptor instead.
func (*GetFlightsByFlightNumberResp) Descriptor() ([]byte, []int) {
	return file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_rawDescGZIP(), []int{16}
}

func (x *GetFlightsByFlightNumberResp) GetUniqFlightWithSpaces() []*UniqFlightWithSpaces {
	if x != nil {
		return x.UniqFlightWithSpaces
	}
	return nil
}

// 表示一种中转方案(一种方案包含多条航班信息)
type TransferFlightInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlightInfos []*FlightInfo `protobuf:"bytes,1,rep,name=FlightInfos,proto3" json:"FlightInfos,omitempty"`
}

func (x *TransferFlightInfo) Reset() {
	*x = TransferFlightInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferFlightInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferFlightInfo) ProtoMessage() {}

func (x *TransferFlightInfo) ProtoReflect() protoreflect.Message {
	mi := &file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferFlightInfo.ProtoReflect.Descriptor instead.
func (*TransferFlightInfo) Descriptor() ([]byte, []int) {
	return file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_rawDescGZIP(), []int{17}
}

func (x *TransferFlightInfo) GetFlightInfos() []*FlightInfo {
	if x != nil {
		return x.FlightInfos
	}
	return nil
}

type QuireTransferFlightsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 出发地(不能为空)
	DepartPosition string `protobuf:"bytes,1,opt,name=DepartPosition,proto3" json:"DepartPosition,omitempty"`
	// 目的地(不能为空)
	ArrivePosition string `protobuf:"bytes,2,opt,name=ArrivePosition,proto3" json:"ArrivePosition,omitempty"`
	// 天数(未来多少天内)
	Days int64 `protobuf:"varint,3,opt,name=Days,proto3" json:"Days,omitempty"`
	// 需求的航班条数(0 代表全部)
	Num int64 `protobuf:"varint,4,opt,name=Num,proto3" json:"Num,omitempty"`
}

func (x *QuireTransferFlightsReq) Reset() {
	*x = QuireTransferFlightsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuireTransferFlightsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuireTransferFlightsReq) ProtoMessage() {}

func (x *QuireTransferFlightsReq) ProtoReflect() protoreflect.Message {
	mi := &file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuireTransferFlightsReq.ProtoReflect.Descriptor instead.
func (*QuireTransferFlightsReq) Descriptor() ([]byte, []int) {
	return file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_rawDescGZIP(), []int{18}
}

func (x *QuireTransferFlightsReq) GetDepartPosition() string {
	if x != nil {
		return x.DepartPosition
	}
	return ""
}

func (x *QuireTransferFlightsReq) GetArrivePosition() string {
	if x != nil {
		return x.ArrivePosition
	}
	return ""
}

func (x *QuireTransferFlightsReq) GetDays() int64 {
	if x != nil {
		return x.Days
	}
	return 0
}

func (x *QuireTransferFlightsReq) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

type QuireTransferFlightsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransferFlights []*TransferFlightInfo `protobuf:"bytes,1,rep,name=TransferFlights,proto3" json:"TransferFlights,omitempty"`
}

func (x *QuireTransferFlightsResp) Reset() {
	*x = QuireTransferFlightsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuireTransferFlightsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuireTransferFlightsResp) ProtoMessage() {}

func (x *QuireTransferFlightsResp) ProtoReflect() protoreflect.Message {
	mi := &file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuireTransferFlightsResp.ProtoReflect.Descriptor instead.
func (*QuireTransferFlightsResp) Descriptor() ([]byte, []int) {
	return file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_rawDescGZIP(), []int{19}
}

func (x *QuireTransferFlightsResp) GetTransferFlights() []*TransferFlightInfo {
	if x != nil {
		return x.TransferFlights
	}
	return nil
}

// 根据指定航班信息提供返程机票推荐(仅支持直飞)
type RecommendReturnJourneyByFlightInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlightInfo *FlightInfo `protobuf:"bytes,1,opt,name=FlightInfo,proto3" json:"FlightInfo,omitempty"`
}

func (x *RecommendReturnJourneyByFlightInfoReq) Reset() {
	*x = RecommendReturnJourneyByFlightInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecommendReturnJourneyByFlightInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecommendReturnJourneyByFlightInfoReq) ProtoMessage() {}

func (x *RecommendReturnJourneyByFlightInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecommendReturnJourneyByFlightInfoReq.ProtoReflect.Descriptor instead.
func (*RecommendReturnJourneyByFlightInfoReq) Descriptor() ([]byte, []int) {
	return file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_rawDescGZIP(), []int{20}
}

func (x *RecommendReturnJourneyByFlightInfoReq) GetFlightInfo() *FlightInfo {
	if x != nil {
		return x.FlightInfo
	}
	return nil
}

type RecommendReturnJourneyByFlightInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlightInfos []*FlightInfo `protobuf:"bytes,1,rep,name=FlightInfos,proto3" json:"FlightInfos,omitempty"`
}

func (x *RecommendReturnJourneyByFlightInfoResp) Reset() {
	*x = RecommendReturnJourneyByFlightInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecommendReturnJourneyByFlightInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecommendReturnJourneyByFlightInfoResp) ProtoMessage() {}

func (x *RecommendReturnJourneyByFlightInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecommendReturnJourneyByFlightInfoResp.ProtoReflect.Descriptor instead.
func (*RecommendReturnJourneyByFlightInfoResp) Descriptor() ([]byte, []int) {
	return file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_rawDescGZIP(), []int{21}
}

func (x *RecommendReturnJourneyByFlightInfoResp) GetFlightInfos() []*FlightInfo {
	if x != nil {
		return x.FlightInfos
	}
	return nil
}

var File_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto protoreflect.FileDescriptor

var file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_rawDesc = []byte{
	0x0a, 0x30, 0x61, 0x70, 0x70, 0x2f, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x71, 0x75,
	0x69, 0x72, 0x79, 0x2f, 0x63, 0x6d, 0x64, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x62, 0x2f, 0x66,
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x96, 0x05, 0x0a, 0x0a, 0x46, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x49, 0x44, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x46, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x46, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x3a,
	0x0a, 0x0a, 0x53, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a,
	0x53, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x73,
	0x46, 0x69, 0x72, 0x73, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x49, 0x73, 0x46, 0x69, 0x72, 0x73, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x53, 0x70, 0x61, 0x63, 0x65, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x53, 0x70, 0x61, 0x63, 0x65, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75,
	0x72, 0x70, 0x6c, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x53, 0x75, 0x72,
	0x70, 0x6c, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x75, 0x6e, 0x63, 0x74, 0x75, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x50, 0x75, 0x6e, 0x63, 0x74,
	0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a,
	0x0a, 0x0a, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a,
	0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x41, 0x72,
	0x72, 0x69, 0x76, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x41, 0x72, 0x72, 0x69, 0x76, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x0a, 0x41, 0x72, 0x72, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0a, 0x41, 0x72, 0x72, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2e,
	0x0a, 0x0a, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0a, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2e,
	0x0a, 0x0a, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0a, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10,
	0x0a, 0x03, 0x43, 0x62, 0x61, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x43, 0x62, 0x61,
	0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x7a, 0x0a, 0x14, 0x55, 0x6e, 0x69, 0x71, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x57, 0x69,
	0x74, 0x68, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x46, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x44, 0x12, 0x3e, 0x0a, 0x12,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x4f, 0x66, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x12, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73,
	0x4f, 0x66, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4b, 0x0a, 0x07,
	0x54, 0x69, 0x6d, 0x65, 0x46, 0x65, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x46, 0x65, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x46, 0x65, 0x65, 0x22, 0x35, 0x0a, 0x0a, 0x52, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x27, 0x0a, 0x08, 0x54, 0x69, 0x6d, 0x65, 0x46,
	0x65, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x46, 0x65, 0x65, 0x52, 0x08, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x65, 0x65, 0x73,
	0x22, 0x35, 0x0a, 0x0a, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x27,
	0x0a, 0x08, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x65, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x65, 0x65, 0x52, 0x08, 0x54,
	0x69, 0x6d, 0x65, 0x46, 0x65, 0x65, 0x73, 0x22, 0x85, 0x01, 0x0a, 0x23, 0x51, 0x75, 0x69, 0x72,
	0x65, 0x42, 0x79, 0x53, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x44, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x64,
	0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12,
	0x22, 0x0a, 0x0c, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x3a, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x44, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0a, 0x53, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x44, 0x61, 0x74, 0x65, 0x22,
	0x58, 0x0a, 0x24, 0x51, 0x75, 0x69, 0x72, 0x65, 0x42, 0x79, 0x53, 0x65, 0x74, 0x4f, 0x75, 0x74,
	0x44, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x64, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x30, 0x0a, 0x0b, 0x46, 0x6c, 0x69, 0x67, 0x68,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70,
	0x62, 0x2e, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x46, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0xba, 0x01, 0x0a, 0x2c, 0x51, 0x75,
	0x69, 0x72, 0x65, 0x42, 0x79, 0x53, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x44, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x64, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x3a, 0x0a, 0x0a, 0x53, 0x65,
	0x74, 0x4f, 0x75, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x53, 0x65, 0x74, 0x4f,
	0x75, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26,
	0x0a, 0x0e, 0x41, 0x72, 0x72, 0x69, 0x76, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x41, 0x72, 0x72, 0x69, 0x76, 0x65, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x61, 0x0a, 0x2d, 0x51, 0x75, 0x69, 0x72, 0x65, 0x42,
	0x79, 0x53, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x44, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x64, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x30, 0x0a, 0x0b, 0x46, 0x6c, 0x69, 0x67, 0x68,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70,
	0x62, 0x2e, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x46, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x2d, 0x0a, 0x0f, 0x46, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x44, 0x22, 0x42, 0x0a, 0x10, 0x46, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x0a,
	0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0a, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x8d, 0x01, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x0e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26,
	0x0a, 0x0e, 0x41, 0x72, 0x72, 0x69, 0x76, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x41, 0x72, 0x72, 0x69, 0x76, 0x65, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x79, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x44, 0x61, 0x79, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x4e, 0x75,
	0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x4e, 0x75, 0x6d, 0x22, 0x4a, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x6c, 0x69, 0x67, 0x68,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x30, 0x0a, 0x0b, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62,
	0x2e, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x46, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0xc9, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74,
	0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x42, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x0e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26,
	0x0a, 0x0e, 0x41, 0x72, 0x72, 0x69, 0x76, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x41, 0x72, 0x72, 0x69, 0x76, 0x65, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x69, 0x6e, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4d, 0x69, 0x6e, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x61, 0x78, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4d, 0x61, 0x78, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x44, 0x61, 0x79, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x44, 0x61,
	0x79, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x4e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x4e, 0x75, 0x6d, 0x22, 0x4e, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x69, 0x67, 0x68,
	0x74, 0x73, 0x42, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x30, 0x0a, 0x0b, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x73, 0x22, 0x67, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x69, 0x67, 0x68,
	0x74, 0x73, 0x42, 0x79, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x0c, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x46, 0x6c, 0x69, 0x67, 0x68,
	0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x79, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x44, 0x61, 0x79, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x4e,
	0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x4e, 0x75, 0x6d, 0x22, 0x6c, 0x0a,
	0x1c, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x42, 0x79, 0x46, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4c, 0x0a,
	0x14, 0x55, 0x6e, 0x69, 0x71, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x57, 0x69, 0x74, 0x68, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x62,
	0x2e, 0x55, 0x6e, 0x69, 0x71, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x57, 0x69, 0x74, 0x68, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x73, 0x52, 0x14, 0x55, 0x6e, 0x69, 0x71, 0x46, 0x6c, 0x69, 0x67, 0x68,
	0x74, 0x57, 0x69, 0x74, 0x68, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x22, 0x46, 0x0a, 0x12, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x30, 0x0a, 0x0b, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x73, 0x22, 0x8f, 0x01, 0x0a, 0x17, 0x51, 0x75, 0x69, 0x72, 0x65, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12,
	0x26, 0x0a, 0x0e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x41, 0x72, 0x72, 0x69, 0x76,
	0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x41, 0x72, 0x72, 0x69, 0x76, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x44, 0x61, 0x79, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x44,
	0x61, 0x79, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x4e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x4e, 0x75, 0x6d, 0x22, 0x5c, 0x0a, 0x18, 0x51, 0x75, 0x69, 0x72, 0x65, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x40, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x46, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x46, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x73, 0x22, 0x57, 0x0a, 0x25, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x65, 0x79, 0x42, 0x79, 0x46,
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x2e, 0x0a, 0x0a,
	0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0a, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x5a, 0x0a, 0x26,
	0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4a,
	0x6f, 0x75, 0x72, 0x6e, 0x65, 0x79, 0x42, 0x79, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x30, 0x0a, 0x0b, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62,
	0x2e, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x46, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x32, 0xa9, 0x06, 0x0a, 0x0d, 0x66, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x49, 0x6e, 0x71, 0x75, 0x69, 0x72, 0x79, 0x12, 0x75, 0x0a, 0x20, 0x51, 0x75,
	0x69, 0x72, 0x65, 0x42, 0x79, 0x53, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x44, 0x61, 0x74, 0x65, 0x41,
	0x6e, 0x64, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x27,
	0x2e, 0x70, 0x62, 0x2e, 0x51, 0x75, 0x69, 0x72, 0x65, 0x42, 0x79, 0x53, 0x65, 0x74, 0x4f, 0x75,
	0x74, 0x44, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x64, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x70, 0x62, 0x2e, 0x51, 0x75, 0x69,
	0x72, 0x65, 0x42, 0x79, 0x53, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x44, 0x61, 0x74, 0x65, 0x41, 0x6e,
	0x64, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x90, 0x01, 0x0a, 0x29, 0x51, 0x75, 0x69, 0x72, 0x65, 0x42, 0x79, 0x53, 0x65, 0x74,
	0x4f, 0x75, 0x74, 0x44, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x64, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x30, 0x2e, 0x70, 0x62, 0x2e, 0x51, 0x75, 0x69, 0x72, 0x65, 0x42, 0x79, 0x53, 0x65, 0x74, 0x4f,
	0x75, 0x74, 0x44, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x64, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x1a, 0x31, 0x2e, 0x70, 0x62, 0x2e, 0x51, 0x75, 0x69, 0x72, 0x65, 0x42, 0x79, 0x53, 0x65,
	0x74, 0x4f, 0x75, 0x74, 0x44, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x64, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0c, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x46,
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x4b, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x1a, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x42, 0x79, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x46,
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x42, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x73, 0x42, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5d, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x73, 0x42, 0x79, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74,
	0x73, 0x42, 0x79, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x1a, 0x20, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x69, 0x67, 0x68,
	0x74, 0x73, 0x42, 0x79, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x14, 0x51, 0x75, 0x69, 0x72, 0x65, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x12, 0x1b, 0x2e, 0x70,
	0x62, 0x2e, 0x51, 0x75, 0x69, 0x72, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x46,
	0x6c, 0x69, 0x67, 0x68, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x51,
	0x75, 0x69, 0x72, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x46, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x7b, 0x0a, 0x22, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x65,
	0x79, 0x42, 0x79, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x29, 0x2e,
	0x70, 0x62, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x65, 0x79, 0x42, 0x79, 0x46, 0x6c, 0x69, 0x67, 0x68,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4a, 0x6f, 0x75,
	0x72, 0x6e, 0x65, 0x79, 0x42, 0x79, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_rawDescOnce sync.Once
	file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_rawDescData = file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_rawDesc
)

func file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_rawDescGZIP() []byte {
	file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_rawDescOnce.Do(func() {
		file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_rawDescData = protoimpl.X.CompressGZIP(file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_rawDescData)
	})
	return file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_rawDescData
}

var file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_goTypes = []interface{}{
	(*FlightInfo)(nil),                                    // 0: pb.FlightInfo
	(*UniqFlightWithSpaces)(nil),                          // 1: pb.UniqFlightWithSpaces
	(*TimeFee)(nil),                                       // 2: pb.TimeFee
	(*RefundInfo)(nil),                                    // 3: pb.RefundInfo
	(*ChangeInfo)(nil),                                    // 4: pb.ChangeInfo
	(*QuireBySetOutDateAndFlightNumberReq)(nil),           // 5: pb.QuireBySetOutDateAndFlightNumberReq
	(*QuireBySetOutDateAndFlightNumberResp)(nil),          // 6: pb.QuireBySetOutDateAndFlightNumberResp
	(*QuireBySetOutDateStartPositionEndPositionReq)(nil),  // 7: pb.QuireBySetOutDateStartPositionEndPositionReq
	(*QuireBySetOutDateStartPositionEndPositionResp)(nil), // 8: pb.QuireBySetOutDateStartPositionEndPositionResp
	(*FlightDetailReq)(nil),                               // 9: pb.FlightDetailReq
	(*FlightDetailResp)(nil),                              // 10: pb.FlightDetailResp
	(*GetDiscountFlightsReq)(nil),                         // 11: pb.GetDiscountFlightsReq
	(*GetDiscountFlightsResp)(nil),                        // 12: pb.GetDiscountFlightsResp
	(*GetFlightsByPriceRangeReq)(nil),                     // 13: pb.GetFlightsByPriceRangeReq
	(*GetFlightsByPriceRangeResp)(nil),                    // 14: pb.GetFlightsByPriceRangeResp
	(*GetFlightsByFlightNumberReq)(nil),                   // 15: pb.GetFlightsByFlightNumberReq
	(*GetFlightsByFlightNumberResp)(nil),                  // 16: pb.GetFlightsByFlightNumberResp
	(*TransferFlightInfo)(nil),                            // 17: pb.TransferFlightInfo
	(*QuireTransferFlightsReq)(nil),                       // 18: pb.QuireTransferFlightsReq
	(*QuireTransferFlightsResp)(nil),                      // 19: pb.QuireTransferFlightsResp
	(*RecommendReturnJourneyByFlightInfoReq)(nil),         // 20: pb.RecommendReturnJourneyByFlightInfoReq
	(*RecommendReturnJourneyByFlightInfoResp)(nil),        // 21: pb.RecommendReturnJourneyByFlightInfoResp
	(*timestamp.Timestamp)(nil),                           // 22: google.protobuf.Timestamp
}
var file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_depIdxs = []int32{
	22, // 0: pb.FlightInfo.SetOutDate:type_name -> google.protobuf.Timestamp
	22, // 1: pb.FlightInfo.DepartTime:type_name -> google.protobuf.Timestamp
	22, // 2: pb.FlightInfo.ArriveTime:type_name -> google.protobuf.Timestamp
	3,  // 3: pb.FlightInfo.RefundInfo:type_name -> pb.RefundInfo
	4,  // 4: pb.FlightInfo.ChangeInfo:type_name -> pb.ChangeInfo
	0,  // 5: pb.UniqFlightWithSpaces.SpacesOfFlightInfo:type_name -> pb.FlightInfo
	22, // 6: pb.TimeFee.Time:type_name -> google.protobuf.Timestamp
	2,  // 7: pb.RefundInfo.TimeFees:type_name -> pb.TimeFee
	2,  // 8: pb.ChangeInfo.TimeFees:type_name -> pb.TimeFee
	22, // 9: pb.QuireBySetOutDateAndFlightNumberReq.SetOutDate:type_name -> google.protobuf.Timestamp
	0,  // 10: pb.QuireBySetOutDateAndFlightNumberResp.FlightInfos:type_name -> pb.FlightInfo
	22, // 11: pb.QuireBySetOutDateStartPositionEndPositionReq.SetOutDate:type_name -> google.protobuf.Timestamp
	0,  // 12: pb.QuireBySetOutDateStartPositionEndPositionResp.FlightInfos:type_name -> pb.FlightInfo
	0,  // 13: pb.FlightDetailResp.FlightInfo:type_name -> pb.FlightInfo
	0,  // 14: pb.GetDiscountFlightsResp.FlightInfos:type_name -> pb.FlightInfo
	0,  // 15: pb.GetFlightsByPriceRangeResp.FlightInfos:type_name -> pb.FlightInfo
	1,  // 16: pb.GetFlightsByFlightNumberResp.UniqFlightWithSpaces:type_name -> pb.UniqFlightWithSpaces
	0,  // 17: pb.TransferFlightInfo.FlightInfos:type_name -> pb.FlightInfo
	17, // 18: pb.QuireTransferFlightsResp.TransferFlights:type_name -> pb.TransferFlightInfo
	0,  // 19: pb.RecommendReturnJourneyByFlightInfoReq.FlightInfo:type_name -> pb.FlightInfo
	0,  // 20: pb.RecommendReturnJourneyByFlightInfoResp.FlightInfos:type_name -> pb.FlightInfo
	5,  // 21: pb.flightInquiry.QuireBySetOutDateAndFlightNumber:input_type -> pb.QuireBySetOutDateAndFlightNumberReq
	7,  // 22: pb.flightInquiry.QuireBySetOutDateStartPositionEndPosition:input_type -> pb.QuireBySetOutDateStartPositionEndPositionReq
	9,  // 23: pb.flightInquiry.FlightDetail:input_type -> pb.FlightDetailReq
	11, // 24: pb.flightInquiry.GetDiscountFlights:input_type -> pb.GetDiscountFlightsReq
	13, // 25: pb.flightInquiry.GetFlightsByPriceRange:input_type -> pb.GetFlightsByPriceRangeReq
	15, // 26: pb.flightInquiry.GetFlightsByFlightNumber:input_type -> pb.GetFlightsByFlightNumberReq
	18, // 27: pb.flightInquiry.QuireTransferFlights:input_type -> pb.QuireTransferFlightsReq
	20, // 28: pb.flightInquiry.RecommendReturnJourneyByFlightInfo:input_type -> pb.RecommendReturnJourneyByFlightInfoReq
	6,  // 29: pb.flightInquiry.QuireBySetOutDateAndFlightNumber:output_type -> pb.QuireBySetOutDateAndFlightNumberResp
	8,  // 30: pb.flightInquiry.QuireBySetOutDateStartPositionEndPosition:output_type -> pb.QuireBySetOutDateStartPositionEndPositionResp
	10, // 31: pb.flightInquiry.FlightDetail:output_type -> pb.FlightDetailResp
	12, // 32: pb.flightInquiry.GetDiscountFlights:output_type -> pb.GetDiscountFlightsResp
	14, // 33: pb.flightInquiry.GetFlightsByPriceRange:output_type -> pb.GetFlightsByPriceRangeResp
	16, // 34: pb.flightInquiry.GetFlightsByFlightNumber:output_type -> pb.GetFlightsByFlightNumberResp
	19, // 35: pb.flightInquiry.QuireTransferFlights:output_type -> pb.QuireTransferFlightsResp
	21, // 36: pb.flightInquiry.RecommendReturnJourneyByFlightInfo:output_type -> pb.RecommendReturnJourneyByFlightInfoResp
	29, // [29:37] is the sub-list for method output_type
	21, // [21:29] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_init() }
func file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_init() {
	if File_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlightInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UniqFlightWithSpaces); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeFee); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefundInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuireBySetOutDateAndFlightNumberReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuireBySetOutDateAndFlightNumberResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuireBySetOutDateStartPositionEndPositionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuireBySetOutDateStartPositionEndPositionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlightDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlightDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDiscountFlightsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDiscountFlightsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFlightsByPriceRangeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFlightsByPriceRangeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFlightsByFlightNumberReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFlightsByFlightNumberResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferFlightInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuireTransferFlightsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuireTransferFlightsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecommendReturnJourneyByFlightInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecommendReturnJourneyByFlightInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_goTypes,
		DependencyIndexes: file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_depIdxs,
		MessageInfos:      file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_msgTypes,
	}.Build()
	File_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto = out.File
	file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_rawDesc = nil
	file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_goTypes = nil
	file_app_flightInquiry_cmd_rpc_pb_flightInquiry_proto_depIdxs = nil
}
