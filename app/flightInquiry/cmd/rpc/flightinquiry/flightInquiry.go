// Code generated by goctl. DO NOT EDIT!
// Source: flightInquiry.proto

package flightinquiry

import (
	"context"

	"uranus/app/flightInquiry/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	FlightInfo                                    = pb.FlightInfo
	QuireBySetOutTimeAndFlightNumberReq           = pb.QuireBySetOutTimeAndFlightNumberReq
	QuireBySetOutTimeAndFlightNumberResp          = pb.QuireBySetOutTimeAndFlightNumberResp
	QuireBySetOutTimeStartPositionEndPositionReq  = pb.QuireBySetOutTimeStartPositionEndPositionReq
	QuireBySetOutTimeStartPositionEndPositionResp = pb.QuireBySetOutTimeStartPositionEndPositionResp

	FlightInquiry interface {
		QuireBySetOutTimeAndFlightNumber(ctx context.Context, in *QuireBySetOutTimeAndFlightNumberReq, opts ...grpc.CallOption) (*QuireBySetOutTimeAndFlightNumberResp, error)
		QuireBySetOutTimeStartPositionEndPosition(ctx context.Context, in *QuireBySetOutTimeStartPositionEndPositionReq, opts ...grpc.CallOption) (*QuireBySetOutTimeStartPositionEndPositionResp, error)
	}

	defaultFlightInquiry struct {
		cli zrpc.Client
	}
)

func NewFlightInquiry(cli zrpc.Client) FlightInquiry {
	return &defaultFlightInquiry{
		cli: cli,
	}
}

func (m *defaultFlightInquiry) QuireBySetOutTimeAndFlightNumber(ctx context.Context, in *QuireBySetOutTimeAndFlightNumberReq, opts ...grpc.CallOption) (*QuireBySetOutTimeAndFlightNumberResp, error) {
	client := pb.NewFlightInquiryClient(m.cli.Conn())
	return client.QuireBySetOutTimeAndFlightNumber(ctx, in, opts...)
}

func (m *defaultFlightInquiry) QuireBySetOutTimeStartPositionEndPosition(ctx context.Context, in *QuireBySetOutTimeStartPositionEndPositionReq, opts ...grpc.CallOption) (*QuireBySetOutTimeStartPositionEndPositionResp, error) {
	client := pb.NewFlightInquiryClient(m.cli.Conn())
	return client.QuireBySetOutTimeStartPositionEndPosition(ctx, in, opts...)
}
