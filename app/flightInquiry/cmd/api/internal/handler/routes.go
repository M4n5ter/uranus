// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	flightInquiry "uranus/app/flightInquiry/cmd/api/internal/handler/flightInquiry"
	"uranus/app/flightInquiry/cmd/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/quiry/date-number",
				Handler: flightInquiry.QuireBySetOutDateAndFlightNumberHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/quiry/date-position",
				Handler: flightInquiry.QuireBySetOutDateStartPositionEndPositionHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/quiry/discount",
				Handler: flightInquiry.GetDiscountFlightsHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/quiry/flights-by-number",
				Handler: flightInquiry.GetFlightsByFlightNumberHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/quiry/flights-by-price",
				Handler: flightInquiry.GetFlightsByPriceRangeHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/quiry/transfer",
				Handler: flightInquiry.QuireTransferFlightsHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/quiry/return-journey",
				Handler: flightInquiry.RecommendReturnJourneyByFlightInfoHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/flightInquiry/v1"),
	)
}
