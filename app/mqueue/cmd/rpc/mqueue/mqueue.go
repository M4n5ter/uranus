// Code generated by goctl. DO NOT EDIT!
// Source: mqueue.proto

package mqueue

import (
	"context"

	"uranus/app/mqueue/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AqDeferFlightOrderCloseReq  = pb.AqDeferFlightOrderCloseReq
	AqDeferFlightOrderCloseResp = pb.AqDeferFlightOrderCloseResp
	KqPaymentStatusUpdateReq    = pb.KqPaymentStatusUpdateReq
	KqPaymentStatusUpdateResp   = pb.KqPaymentStatusUpdateResp
	SendWxMiniSubMessageReq     = pb.SendWxMiniSubMessageReq
	SendWxMiniSubMessageResp    = pb.SendWxMiniSubMessageResp

	Mqueue interface {
		// 添加航班订单延迟关闭到asynq队列
		AqDeferFlightOrderClose(ctx context.Context, in *AqDeferFlightOrderCloseReq, opts ...grpc.CallOption) (*AqDeferFlightOrderCloseResp, error)
		// 支付流水状态变更发送到kq
		KqPaymentStatusUpdate(ctx context.Context, in *KqPaymentStatusUpdateReq, opts ...grpc.CallOption) (*KqPaymentStatusUpdateResp, error)
		// 发送微信小程序订阅消息
		SendWxMiniSubMessage(ctx context.Context, in *SendWxMiniSubMessageReq, opts ...grpc.CallOption) (*SendWxMiniSubMessageResp, error)
	}

	defaultMqueue struct {
		cli zrpc.Client
	}
)

func NewMqueue(cli zrpc.Client) Mqueue {
	return &defaultMqueue{
		cli: cli,
	}
}

// 添加航班订单延迟关闭到asynq队列
func (m *defaultMqueue) AqDeferFlightOrderClose(ctx context.Context, in *AqDeferFlightOrderCloseReq, opts ...grpc.CallOption) (*AqDeferFlightOrderCloseResp, error) {
	client := pb.NewMqueueClient(m.cli.Conn())
	return client.AqDeferFlightOrderClose(ctx, in, opts...)
}

// 支付流水状态变更发送到kq
func (m *defaultMqueue) KqPaymentStatusUpdate(ctx context.Context, in *KqPaymentStatusUpdateReq, opts ...grpc.CallOption) (*KqPaymentStatusUpdateResp, error) {
	client := pb.NewMqueueClient(m.cli.Conn())
	return client.KqPaymentStatusUpdate(ctx, in, opts...)
}

// 发送微信小程序订阅消息
func (m *defaultMqueue) SendWxMiniSubMessage(ctx context.Context, in *SendWxMiniSubMessageReq, opts ...grpc.CallOption) (*SendWxMiniSubMessageResp, error) {
	client := pb.NewMqueueClient(m.cli.Conn())
	return client.SendWxMiniSubMessage(ctx, in, opts...)
}
