syntax = "proto3";

option go_package = "./pb";
package pb;

import "google/protobuf/timestamp.proto";

// 预定机票请求
message BookAirTicketsReq {
  // 用户的平台唯一id
  string                     Auth_key      = 1;
  // 航班号，例如MU5735
  string                    FlightNumber   = 2;
  // 出发日期
  google.protobuf.Timestamp SetOutDate     = 3;
  // 是否为头等舱/商务舱
  bool                      IsFirstClass   = 4;
  // 起飞地点
  string                    DepartPosition = 5;
  // 起飞时间
  google.protobuf.Timestamp DepartTime     = 6;
  // 降落地点
  string                    ArrivePosition = 7;
  // 降落时间
  google.protobuf.Timestamp ArriveTime     = 8;
}
// 预定机票响应
message BookAirTicketsResp {
  bool                      IsSucceed      = 1;
}

// 退票请求
message RefundAirTicketsReq {
  // 用户的平台唯一id
  string                    AuthKey        = 1;
  // 用户拥有的对应票id
  uint64                    TicketID       = 2;
}
// 退票响应
message RefundAirTicketsResp {
  bool                      IsSucceed      = 1;
}

// 改票请求
message ChangeAirTicketsReq {
  // 用户的平台唯一id
  string                    AuthKey        = 1;
  // 用户拥有的对应票id
  uint64                    TicketID       = 2;
  // 目标舱位id
  uint64                    SpaceID        = 3;
}
// 改票响应
message ChangeAirTicketsResp {
  bool                      IsSucceed      = 1;
}

service flightReservation {
  // BookAirTickets 给定： 用户的平台唯一id 航班号 出发日期 是否为头等舱/商务舱 起飞地点/时间 降落地点/时间 来预定机票
  rpc BookAirTickets(BookAirTicketsReq) returns(BookAirTicketsResp);

  // RefundAirTickets 给定：用户的平台唯一id 用户拥有的对应票id 来退订机票
  rpc RefundAirTickets(RefundAirTicketsReq) returns(RefundAirTicketsResp);

  // ChangeAirTickets 给定：用户的平台唯一id 用户拥有的对应票id 目标舱位id
  rpc ChangeAirTickets(ChangeAirTicketsReq) returns(ChangeAirTicketsResp);
}