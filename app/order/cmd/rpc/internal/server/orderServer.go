// Code generated by goctl. DO NOT EDIT!
// Source: order.proto

package server

import (
	"context"

	"uranus/app/order/cmd/rpc/internal/logic"
	"uranus/app/order/cmd/rpc/internal/svc"
	"uranus/app/order/cmd/rpc/pb"
)

type OrderServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedOrderServer
}

func NewOrderServer(svcCtx *svc.ServiceContext) *OrderServer {
	return &OrderServer{
		svcCtx: svcCtx,
	}
}

// 机票下订单
func (s *OrderServer) CreateFlightOrder(ctx context.Context, in *pb.CreateFlightOrderReq) (*pb.CreateFlightOrderResp, error) {
	l := logic.NewCreateFlightOrderLogic(ctx, s.svcCtx)
	return l.CreateFlightOrder(in)
}

//  机票改价
func (s *OrderServer) ChangeTheOrderPrice(ctx context.Context, in *pb.ChangeTheOrderPriceReq) (*pb.ChangeTheOrderPriceResp, error) {
	l := logic.NewChangeTheOrderPriceLogic(ctx, s.svcCtx)
	return l.ChangeTheOrderPrice(in)
}

// 机票订单详情
func (s *OrderServer) FlightOrderDetail(ctx context.Context, in *pb.FlightOrderDetailReq) (*pb.FlightOrderDetailResp, error) {
	l := logic.NewFlightOrderDetailLogic(ctx, s.svcCtx)
	return l.FlightOrderDetail(in)
}

// 更新机票订单状态
func (s *OrderServer) UpdateFlightOrderTradeState(ctx context.Context, in *pb.UpdateFlightOrderTradeStateReq) (*pb.UpdateFlightOrderTradeStateResp, error) {
	l := logic.NewUpdateFlightOrderTradeStateLogic(ctx, s.svcCtx)
	return l.UpdateFlightOrderTradeState(in)
}

// 用户机票订单
func (s *OrderServer) UserFlightOrderList(ctx context.Context, in *pb.UserFlightOrderListReq) (*pb.UserFlightOrderListResp, error) {
	l := logic.NewUserFlightOrderListLogic(ctx, s.svcCtx)
	return l.UserFlightOrderList(in)
}
