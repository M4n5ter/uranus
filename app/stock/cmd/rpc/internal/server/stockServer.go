// Code generated by goctl. DO NOT EDIT!
// Source: stock.proto

package server

import (
	"context"

	"uranus/app/stock/cmd/rpc/internal/logic"
	"uranus/app/stock/cmd/rpc/internal/svc"
	"uranus/app/stock/cmd/rpc/pb"
)

type StockServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedStockServer
}

func NewStockServer(svcCtx *svc.ServiceContext) *StockServer {
	return &StockServer{
		svcCtx: svcCtx,
	}
}

// 通过 ticketID 加库存
func (s *StockServer) AddStockByTicketID(ctx context.Context, in *pb.AddStockByTicketIDReq) (*pb.AddStockResp, error) {
	l := logic.NewAddStockByTicketIDLogic(ctx, s.svcCtx)
	return l.AddStockByTicketID(in)
}

// 通过 ticketID 加库存 rollback
func (s *StockServer) AddStockByTicketIDRollBack(ctx context.Context, in *pb.AddStockByTicketIDReq) (*pb.AddStockResp, error) {
	l := logic.NewAddStockByTicketIDRollBackLogic(ctx, s.svcCtx)
	return l.AddStockByTicketIDRollBack(in)
}

// 通过 spaceID 加库存
func (s *StockServer) AddStockBySpaceID(ctx context.Context, in *pb.AddStockBySpaceIDReq) (*pb.AddStockResp, error) {
	l := logic.NewAddStockBySpaceIDLogic(ctx, s.svcCtx)
	return l.AddStockBySpaceID(in)
}

// 通过 spaceID 加库存 rollback
func (s *StockServer) AddStockBySpaceIDRollBack(ctx context.Context, in *pb.AddStockBySpaceIDReq) (*pb.AddStockResp, error) {
	l := logic.NewAddStockBySpaceIDRollBackLogic(ctx, s.svcCtx)
	return l.AddStockBySpaceIDRollBack(in)
}

// 通过 ticketID 扣库存
func (s *StockServer) DeductStockByTicketID(ctx context.Context, in *pb.DeductStockByTicketIDReq) (*pb.DeductStockResp, error) {
	l := logic.NewDeductStockByTicketIDLogic(ctx, s.svcCtx)
	return l.DeductStockByTicketID(in)
}

// 通过 ticketID 扣库存 rollback
func (s *StockServer) DeductStockByTicketIDRollBack(ctx context.Context, in *pb.DeductStockByTicketIDReq) (*pb.DeductStockResp, error) {
	l := logic.NewDeductStockByTicketIDRollBackLogic(ctx, s.svcCtx)
	return l.DeductStockByTicketIDRollBack(in)
}

// 通过 spaceID 扣库存
func (s *StockServer) DeductStockBySpaceID(ctx context.Context, in *pb.DeductStockBySpaceIDReq) (*pb.DeductStockResp, error) {
	l := logic.NewDeductStockBySpaceIDLogic(ctx, s.svcCtx)
	return l.DeductStockBySpaceID(in)
}

// 通过 spaceID 扣库存 rollback
func (s *StockServer) DeductStockBySpaceIDRollBack(ctx context.Context, in *pb.DeductStockBySpaceIDReq) (*pb.DeductStockResp, error) {
	l := logic.NewDeductStockBySpaceIDRollBackLogic(ctx, s.svcCtx)
	return l.DeductStockBySpaceIDRollBack(in)
}
